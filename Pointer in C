/*
#include <stdio.h>
#include<malloc.h>
int main() {
	//code
	int i =  0;int j = 0;
	int a[5] = {1,2,3,4,5};
	
	printf("Printing one dimensional array\n");
	for(i = 0;i<5;i++){
	    printf("%d ",a[i]);
	}
	printf("\nPrinting one dimensional array using pointer to integer\n");
	int *p = a;
	for(i = 0;i<5;i++){
	    printf("%d ", p[i]);
	}
	int (*q)[5] = &a;
	printf("\nPrinting one dimensional array using pointer to array\n");
	for(i = 0;i<5;i++){
	    printf("%d ", (*q)[i]);
	}
	int *r[5];
	printf("\nPrinting one dimensional array using array of pointers\n");
	r[0] = a;
	for(i=0;i<5;i++){
	    printf("%d ", r[0][i]);
	}
	printf("\n");
	
	printf("printing a simple two dimensional array\n");
	int s[][2] = {1,2,3,4,5,6};
	
	for(i = 0;i<3;i++){
	    for(j = 0;j<2;j++)
	    printf("%d ", s[i][j]);
	    printf("\n");
	}
	printf("Printing two dimensional array using pinter to integer\n");
	int *p = *s;
	for(i = 0;i<3;i++){
	    for(j = 0;j<2;j++){
	        printf("%d ", *(p++));
	    }
	    printf("\n");
	}
	printf("Printing a two dimensional array using pointer to one dimensional array\n");
	int (*t)[2] = s;
	for(i = 0;i<3;i++){
	    for(j = 0;j<2;j++){
	        printf("%d ",t[i][j]);
	    }
	    printf("\n");
	}
	printf("Printing a two dimensional array using array of pointers\n");
	
	int *u[3];
	u[0] = &s[0][0];
	u[1] = &s[1][0];
	u[2] = &s[2][0];
	
	for(i = 0;i<3;i++){
	for(j = 0;j<2;j++)
	printf("%d ", u[i][j]);
	printf("\n");
	}
	
	printf("Printing a two dimensional array using a pointer of two dimensional array\n");
	
	int (*v)[3][2];
	v = &s;
	 for(i = 0;i<3;i++){
	     for(j = 0;j<2;j++){
	         printf("%d ", v[0][i][j]);
	     }
	     printf("\n");
	 }
	
	
	
	printf("Dynamic allocation of two dimensional array\n");
	int row,col;
	scanf("%d %d",&row, &col);
	// an array of pointers of size = row
	int **p = (int **)malloc(sizeof(int *) * row);
	
	
	for(i = 0;i<row; i++){
	        p[i] = (int *) malloc(sizeof(int) * col);
	}
	
	for(i = 0;i<row;i++){
	    for(j = 0;j<col;j++){
	        scanf("%d", &p[i][j]);
	    }
	}
	
	for(i = 0;i<row;i++){
	    for(j = 0;j<col;j++){
	        printf("%d ", p[i][j]);
	    }
	    printf("\n");
	}
	return 0;
}
*/
